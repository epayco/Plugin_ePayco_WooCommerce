//////////////////////////////////////////////////////////////////////////
(function () {
    var e, t, r, o;
    languages = new Array, base_url_pre = "https://api.secure.epayco.io/", languages.es = {
        errors: [{
            type: 101,
            title: "[101] Datos ilegibles",
            description: "Los Datos son ilegibles compruebe la integridad del formulario"
        }, {
            type: 102,
            title: "[102] Error publicKey",
            description: "La publicKey es ilegible o no se tiene acceso, por favor compruebe"
        }, {
            type: 103,
            title: "[103] Campo errÃ³neo o vacÃ­o",
            description: "El formato es incorrecto o esta vacÃ­o en:"
        }]
    }, languages.en = {
        errors: [{
            type: 101,
            title: "[101] Illegible data",
            description: "The Data is illegible check the integrity of the form"
        }, {
            type: 102,
            title: "[102] Error publicKey",
            description: "The publicKey is unreadable or not accessible, please check"
        }, {
            type: 103,
            title: "[103] Bad or empty field",
            description: "The format is incorrect or the field is empty:"
        }]
    }, e = function (e, t) {
        if ("undefined" == typeof localStorage || void 0 === localStorage.getItem) return null;
        try {
            return localStorage.getItem("hashKey", "1"), localStorage.removeItem("hashKey"), localStorage(e, t)
        } catch (e) {
            return e, null
        }
    }, t = function (e, t) {
        if ("undefined" == typeof localStorage || void 0 === localStorage.setItem) return null;
        try {
            return localStorage.setItem("hashKey", "1"), localStorage.removeItem("hashKey"), localStorage(e, t)
        } catch (e) {
            return e, null
        }
    }, getError = function (e, t, r) {
        let o = ePayco.getLanguage();
        if ("es" == o || "en" == o) var n = languages[ePayco.getLanguage()].errors, a = e; else {
            var i;
            n = languages.en.errors, a = e
        }
        for (var l = 0; l < n.length; l++) a == n[l].type && (i = n[l]);
        if (t) {
            var c = i.description.slice(0, 47);
            i.description = c + " " + t
        }
        return console.log(i), alert(i.description), i
    }, dump = function (e) {
        return e
    }, r = e("epayco_publish_key"), o = e("epayco_language"), window.ePayco || (window.ePayco = {
        setPublicKey: function (e) {
            "string" == typeof e ? t("epayco_publish_key", r = e) : getError(102)
        }, setLanguage: function (e) {
            "string" == typeof e ? t("epayco_language", o = e) : getError(102)
        }, getPublicKey: function () {
            return r
        }, getLanguage: function () {
            return o
        }, _errors: {
            alert: function (e) {
                alert(e)
            }
        }, _utils: {
            objectKeys: function (e) {
                var t, r;
                for (r in t = [], e) Object.prototype.hasOwnProperty.call(e, r) && t.push(r);
                return t
            }, parseForm: function (e) {
                var t, r, o, n, a, l, c, s, u, g, p, y, f, h, d, m, b, S, v, E, T, K, w;
                if (c = {}, "object" == typeof e) {
                    if ("undefined" != typeof jQuery && (e instanceof jQuery || "jquery" in Object(e)) && "object" != typeof (e = e.get()[0])) return {};
                    if (e.nodeType) {
                        for (K = e.getElementsByTagName("textarea"), l = e.getElementsByTagName("input"), T = e.getElementsByTagName("select"), t = new Array(K.length + l.length + T.length), i = s = 0, S = K.length - 1; s <= S; i = s += 1) t[i] = K[i];
                        for (i = y = 0, v = l.length - 1; y <= v; i = y += 1) t[i + K.length] = l[i];
                        for (i = h = 0, E = T.length - 1; h <= E; i = h += 1) t[i + K.length + l.length] = T[i];
                        for (m = 0, g = t.length; m < g; m++) if ((a = t[m]) && (o = a.getAttribute("data-epayco"))) {
                            for (w = "SELECT" === a.tagName ? a.value : a.getAttribute("value") || a.innerHTML || a.value, d = null, f = c, u = null, b = 0, p = (n = o.replace(/\]/g, "").replace(/\-/g, "_").split(/\[/)).length; b < p; b++) f[r = n[b]] || (f[r] = {}), d = f, u = r, f = f[r];
                            d[u] = w
                        }
                    } else c = e
                }
                return c
            }, encript: (e, t) => {
                if (e && "undefined" !== t) try {
                    return CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(e), t).toString().toString()
                } catch (r) {
                    return CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(e), CryptoJS.enc.Utf8.parse(t).toString()).toString()
                } else console.log("hay algunos valores invalidos")
            }, requestUrl: function (e) {
                (new XMLHttpRequest).withCredentials
            }, createTokenEncrypt: async function (e) {
                try {
                    const t = {public_key: ePayco.getPublicKey(), session: e};
                    let r = "https://api.secure.epayco.io/token/encrypt";
                    const o = await fetch(r, {
                        method: "POST",
                        headers: {"Content-Type": "application/json"},
                        body: JSON.stringify(t)
                    });
                    return await o.json()
                } catch (e) {
                    return console.error("Error:", e), {error: e}
                }
            }, createTokenRequest: async function (e) {
                try {
                    const t = {values: e};
                    let r = "https://api.secure.epayco.io/token/tokenize";
                    const o = await fetch(r, {
                        method: "POST",
                        headers: {"Content-Type": "application/json"},
                        body: JSON.stringify(t)
                    });
                    return await o.json()
                } catch (e) {
                    return console.error("Error:", e), {error: e}
                }
            }, createCreditCard: function (e, t) {
                var r = [];
                const o = ePayco.getPublicKey();
                for (var n = 0; n < e.customer.length; n++) r.push({
                    type: e.customer[n].type,
                    value: this.encript(e.customer[n].value, t)
                });
                var a = {type: "publicKey", value: o},
                    i = {type: "session", value: localStorage.getItem("keyUserIndex")};
                return r.push(a), r.push(i), r
            }, createGuid: function () {
                function e() {
                    return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
                }

                return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
            }, log: function (e) {
                if ("undefined" != typeof console && console.log) return console.log(e)
            }
        }
    })
}).call(this);

(function () {
    var e, t, n, a, r, i, l = [].indexOf || function (e) {
        for (var t = 0, n = this.length; t < n; t++) if (t in this && this[t] === e) return t;
        return -1
    };
    t = [{name: "amex", pattern: /^3[47]/, valid_length: [15]}, {
        name: "diners_club_carte_blanche",
        pattern: /^30[0-5]/,
        valid_length: [14]
    }, {name: "diners_club_international", pattern: /^36/, valid_length: [14]}, {
        name: "laser",
        pattern: /^(6304|670[69]|6771)/,
        valid_length: [16, 17, 18, 19]
    }, {name: "visa_electron", pattern: /^(4026|417500|4508|4844|491(3|7))/, valid_length: [16]}, {
        name: "visa",
        pattern: /^4/,
        valid_length: [16]
    }, {name: "mastercard", pattern: /^5[1-5]/, valid_length: [16]}, {
        name: "maestro",
        pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
        valid_length: [12, 13, 14, 15, 16, 17, 18, 19]
    }], e = ["visa", "mastercard", "maestro", "visa_electron", "amex", "diners_club_carte_blanche", "diners_club_international"], n = function (n) {
        var a, r, i, c, u;
        for (u = function () {
            var n, r, i, c;
            for (c = [], n = 0, r = t.length; n < r; n++) i = (a = t[n]).name, l.call(e, i) >= 0 && c.push(a);
            return c
        }(), i = 0, c = u.length; i < c; i++) if (r = u[i], n.match(r.pattern)) return r;
        return null
    }, is_valid_luhn = function (e) {
        var t, n, a, r, i, l;
        for (l = 0, r = n = 0, a = (i = e.split("").reverse()).length; n < a; r = ++n) t = +(t = i[r]), l += r % 2 ? (t *= 2) < 10 ? t : t - 9 : t;
        return l % 10 == 0
    }, a = function (e, t) {
        var n;
        return n = e.length, l.call(t.valid_length, n) >= 0
    }, r = function (e) {
        return "string" == typeof e && e.match(/^[\d]{1,2}$/) ? parseInt(e) : e
    }, i = function (e) {
        return "number" == typeof e && e < 100 && (e += 2e3), "string" == typeof e && e.match(/^([\d]{2,2}|20[\d]{2,2})$/) ? (e.match(/^([\d]{2,2})$/) && (e = "20" + e), parseInt(e)) : e
    }, ePayco.card = {}, ePayco.card.name = function (e) {
        return (new RegExp).test(e)
    }, ePayco.card.email = function (e) {
        return new RegExp(/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).test(e)
    }, ePayco.card.validateNumber = function (e) {
        var t, r, i;
        return e = "string" == typeof e ? e.replace(/[ -]/g, "") : "number" == typeof e ? e.toString() : "", i = !1, r = !1, null != (t = n(e)) && (i = is_valid_luhn(e), r = a(e, t)), i && r
    }, ePayco.card.validateCVC = function (e) {
        return "number" == typeof e && e >= 0 && e < 1e4 || "string" == typeof e && null !== e.match(/^[\d]{3,4}$/)
    }, ePayco.card.validateExpirationDate = function (e, t) {
        var n, a;
        if (null != t) n = r(e), a = i(t); else {
            var l = e.split("/");
            e = l[0], t = "20" + l[1];
            n = r(e), a = i(t)
        }
        return "number" == typeof n && n > 0 && n < 13 && "number" == typeof a && a > 2020 && a < 2035 && new Date(a, n, new Date(a, n, 0).getDate()) > new Date
    }, ePayco.card.resultExpirationDate = function (e) {
        var t = e.split("/"), n = t[0], a = "20" + t[1];
        return r(n) + "/" + i(a)
    }
}).call(this);

(function () {
    ePayco.token = {}, ePayco.token.create = async function (e, a) {
        if ("object" == typeof (i = ePayco._utils.parseForm(e)) && ePayco._utils.objectKeys(i).length > 0) if (i.card) {
            var r, t, c, d, i, o,
                l = i.card.date_exp.length > 0 ? ePayco.card.resultExpirationDate(i.card.date_exp) : i.card.exp_month + "/" + i.card.exp_year,
                n = i.card.date_exp.length > 0 ? ePayco.card.validateExpirationDate(i.card.date_exp) : ePayco.card.validateExpirationDate(i.card.exp_month, i.card.exp_year);
            r = {
                customer: [{
                    type: "name",
                    value: i.card.name,
                    required: !0,
                    validate: ePayco.card.name(i.card.name)
                }, {
                    type: "email",
                    value: i.card.email,
                    required: !0,
                    validate: ePayco.card.email(i.card.email)
                }, {
                    type: "number",
                    value: i.card.number.replace(/ /g, ""),
                    required: !0,
                    validate: ePayco.card.validateNumber(i.card.number.replace(/ /g, ""))
                }, {
                    type: "cvc",
                    value: i.card.cvc,
                    required: !0,
                    validate: ePayco.card.validateCVC(i.card.cvc)
                }, {type: "date_exp", value: l, required: !0, validate: n}]
            }, o = null == localStorage.getItem("keyUserIndex") ? localStorage.setItem("keyUserIndex", ePayco._utils.createGuid()) : localStorage.getItem("keyUserIndex");
            for (var u = 0; u < r.customer.length; u++) {
                var y = r.customer[u];
                if (y.required && !y.validate) {
                    return a(getError(103, y.type, e).description), !1
                }
            }
            (t = await ePayco._utils.createTokenEncrypt(o)).status ? (c = t.data.token, d = ePayco._utils.createCreditCard(r, c), a(await ePayco._utils.createTokenRequest(d))) : a(t)
        } else getError(101)
    }
}).call(this);